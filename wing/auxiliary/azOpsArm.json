{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "paToken": {
            "type": "securestring",
            "metadata": {
                "description": "Provide the PA Token to authorize Git and create new repository for the organization/user"
            },
            "defaultValue": ""
        },
        "principalId": {
            "type": "array",
            "metadata": {
                "description": "Provide the principalId which is needed to create GitHub secret"
            },
            "defaultValue": [
                "83320e95-b0e6-4147-b531-c7c91f9f3d02"
            ]
        },
        "principalSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Provide the principalId which is needed to create GitHub secret"
            },
            "defaultValue": ""
        },
        "gitHubUserNameOrOrg": {
            "type": "string",
            "metadata": {
                "description": "Provide username or org name for GitHub."
            },
            "defaultValue": ""
        },
        "topLevelManagementGroupPrefix": {
            "type": "string",
            "metadata": {
                "description": "Provide the prefix for your ESLZ setup."
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "formattingPrincipalIdToString": "[replace(replace(replace(string(parameters('principalId')), '\"', ''), '[', ''), ']', '')]",
        "keyVaultName": "[concat(resourceGroup().name, '-azopsvault')]",
        "patSecretName": "PATSecret",
        "spnSecretName": "SPNSecret",
        "userManagedIdentityName": "[concat(resourceGroup().name, '-umi')]",
        "keyVaultAdminRbac": "/providers/Microsoft.Authorization/roleDefinitions/00482a5a-887f-4fb3-b363-3b7fe8e74483"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[variables('userManagedIdentityName')]",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[variables('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('userManagedIdentityName')]"
            ],
            "properties": {
                "enabledForTemplateDeployment": true,
                "enableRbacAuthorization": true,
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "standard"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2020-04-01-preview",
            "name": "[concat(variables('keyVaultName'), '/', variables('patSecretName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('paToken')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2020-04-01-preview",
            "name": "[concat(variables('keyVaultName'), '/', variables('spnSecretName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-01-01-preview",
            "name": "[guid(variables('userManagedIdentityName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userManagedIdentityName'))]"
            ],
            "properties": {
                "principalId": "[reference(variables('userManagedIdentityName'), '2018-11-30').principalId]",
                "roleDefinitionId": "[variables('keyVaultAdminRbac')]"
            }
        }/*,
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "[concat(resourceGroup().name, '-AzOps')]",
            "location": "[resourceGroup().location]",
            "kind": "AzurePowerShell",
            "properties": {
                "primaryScriptUri": "https://raw.githubusercontent.com/krnese/ns/master/azOpsSetup.ps1",
                "arguments": "[concat('-PAToken', ' ', parameters('paToken'), ' ', 
                                      '-GitHubUserNameOrOrg', ' ', parameters('gitHubUserNameOrOrg'), ' ', 
                                      '-SpnObjectId', ' ', variables('formattingPrincipalIdToString'), ' ',
                                      '-AzureSpnPwd', ' ', parameters('principalSecret'), ' ',
                                      '-AzureTenantId', ' ', subscription().tenantId, ' ',
                                      '-EnterpriseScalePrefix', ' ', parameters('topLevelManagementGroupPrefix'), ' ',
                                      '-AzureSubscriptionId', ' ', subscription().subscriptionId)]",
                "azPowerShellVersion": "3.0",
                "timeout": "PT30M",
                "cleanupPreference": "Always",
                "retentionInterval": "P1D"
            }
        }*/
    ]
}